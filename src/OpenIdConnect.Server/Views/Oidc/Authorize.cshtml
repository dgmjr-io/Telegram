@using Telegram.OpenIdConnect.Enums
@using Telegram.OpenIdConnect.Extensions
@using Dgmjr.AspNetCore.TagHelpers.Extensions
@model Telegram.OpenIdConnect.Options.TelegramOpenIdConnectServerOptions
@{
    ViewData["Title"] = "Enter Client Credentials";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="post" class="needs-validation">
    <div class="row align-items-center">
        <div class="col-md-4">
            <div class="form-floating mb-3">
              <input type="text" id="ClientId" name="ClientId" class="form-control" placeholder="Type the client ID here" aria-label="Client ID" />
              <label for="v">Client ID</label>
            </div>
            <div class="form-floating mb-3">
              <input type="password" id="ClientSecret" name="ClientSecret" class="form-control" placeholder="Type the client secret here" aria-label="Client Secret" />
              <label for="ClientSecret">Client Secret</label>
            </div>
            <div class="form-floating mb-3">
              <input type="text" id="state" name="state" class="form-control" placeholder="An (optional) value to be returned with the authorization code" aria-label="State" />
              <label for="state">State</label>
            </div>
            <div class="form-floating mb-3">
              <select id="ResponseType" name="ResponseType" class="form-control" placeholder="Select the response type" aria-label="Response Type">
                <option value="code">Code</option>
                <option value="token">Token</option>
                <option value="id_token">ID Token</option>
              </select>
              <label for="ResponseType">Response Type</label>
            </div>
            <div class="input-group mb-3">
              <label for="Scope" class="input-group-text">Scopes</label>
              <select class="form-floating" list="ScopesOptions" id="Scope" list="Scope" name="Scope" placeholder="Select the scopes to request" aria-label="Scope" multiple>
                <option value="@StandardScope.OpenId.GetDescription()">@StandardScope.OpenId.GetName()</option>
                <option value="@StandardScope.Profile.GetDescription()">@StandardScope.Profile.GetName()</option>
                <option value="@StandardScope.Email.GetDescription()">@StandardScope.Email.GetName()</option>
                <option value="@StandardScope.Address.GetDescription()">@StandardScope.Address.GetName()</option>
                <option value="@StandardScope.Phone.GetDescription()">@StandardScope.Phone.GetName()</option>
                <option value="@StandardScope.OfflineAccess.GetDescription()">@StandardScope.OfflineAccess.GetName()</option>
                <option value="@StandardScope.App.GetDescription()">The Application Itself</option>
              </select>
            </div>
            <div class="form-floating mb-3">
              <input type="url" id="RedirectUri" name="RedirectUri" class="form-control" placeholder="The URI to which the token will be sent and the user redirected" aria-label="Redirect URI" />
              <label for="RedirectUri">Redirect URI</label>
            </div>
            <div class="form-group mb-3">
              <button type="submit" class="btn btn-primary">Log in</button>
            </div>
        </div>
    </div>
</form>
